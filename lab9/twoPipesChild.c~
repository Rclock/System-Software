// The 'consumer' program, pipe4.c, that reads the data is much simpler.
#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

int main(int argc, char *argv[])
{
  int data_processed;
  char buffer[BUFSIZ + 1], buffer2[BUFSIZ + 1];;
  int file_descriptor, file_descriptor2;
  const char childmessage[] = "Hi Mom";
 
  memset(buffer, '\0', sizeof(buffer)); 
  sscanf(argv[1], "%d", &file_descriptor);

  data_processed = read(file_descriptor, buffer, BUFSIZ);
  printf("\nChild %d - read %d bytes over pipe 1: %s\n", getpid(), data_processed, buffer);
  
  sscanf(argv[2], "%d", &file_descriptor2);
  int stuffwrote;
  stuffwrote = write(file_descriptor2, childmessage, strlen(childmessage));
  printf("\nChild %d - Wrote %d bytes over pipe 2\n", getpid(), stuffwrote); 
  exit(EXIT_SUCCESS);
}
